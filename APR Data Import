// Skeleton generated by Hyland Unity Editor on 1/29/2020 9:43:38 AM
namespace APRClaimsInquiriesImport
{
	 #region Imported Assemblies 
    using System;
    using System.Text;
    using System.IO; //
    using System.Collections; //
    using System.Text.RegularExpressions; //
	using System.Globalization;//
    using Hyland.Unity;
    using Hyland.Unity.CodeAnalysis;
    using Hyland.Unity.Workflow;
    using MMOCustomLibrary;
    #endregion
    
    
    /// <summary>
    /// APR Claims / Inquiries Import
    /// </summary>
    public class APRClaimsInquiriesImport : Hyland.Unity.ISchedulableScript
    {
		private MMO library;
		private int numFiles;
		private int fileCount =0;
		private int fileProcessedCount = 0;
		private int objectCount;
		private string DIRECTORY = @"\\corpfs03\SHARED\APR\";
		private string PROCESSED_FOLDER = @"\\corpfs03\SHARED\APR\PROCESSED\";
		private string ERROR_FOLDER = @"\\corpfs03\SHARED\APR\ERROR\";
		private string claimPattern = @"DWNSAMP.*"; // Claims Audit Report
		private string claimPattern2 = @"PERF02A.*"; // Claims Audit Report
		private string corsFilePattern = @"DWNCORS.*"; //
		
        #region OnExecute()
        public void OnExecute(Hyland.Unity.Application app, Hyland.Unity.SchedulableEventArgs args)
        {
			// Script will only execute if there are any files in the directory.
			numFiles =  Directory.GetFiles(this.DIRECTORY).Length;
			if(numFiles > 0)
			{
				library = new MMO(this, app, args);
				library.Log(numFiles.ToString() + " file(s) has been identified.");
            	try{
					// Check to make sure the Directory exists
                	if(Directory.Exists(this.DIRECTORY))
					{
						
                		ProcessDirectory(this.DIRECTORY);
            		}
					else
					{
						library.Log("Directory Does not exist -- > " + this.DIRECTORY);
					}
            	}

            	catch (Exception e)
				{
					library.Log(e.ToString());
				}
				
				library.LogSeperator();library.Log("*** End Script ***");
				library.EndScript();
			}
            
        }
        #endregion
		
		#region ProcessDirectory(string targetDirectory
		public void ProcessDirectory(string targetDirectory) 
    	{
        	// Process the list of files found in the directory.
       		string [] fileEntries = Directory.GetFiles(targetDirectory);
        	foreach(string filePath in fileEntries)
			{	
				string fileName = Path.GetFileName(filePath);
				try{
					ProcessFile(filePath);
					File.Move(filePath, Path.Combine(this.PROCESSED_FOLDER + fileName));
				}
				catch(Exception e)
				{
					File.Move(filePath, Path.Combine(this.ERROR_FOLDER + fileName));
				}
			}
           	 
		}
		#endregion
		
		#region ProcessFile(string path)
		public void ProcessFile(string path) 
    	{
        	this.fileCount++;
			string fileName = Path.GetFileName(path);
			library.Log(string.Format("File [0] of [1] | File Name = [3]",this.fileProcessedCount, this.numFiles, fileName));
			library.LogSeperator();
			// Get Name of file
			// Sets all lines of text to one string
			string[] lines = System.IO.File.ReadAllLines(path); 
	 
			// Regexes are used to match the file name which will determime what objects to create and the format to process.
			Regex claim_regex = new Regex(this.claimPattern); 
			Regex inquiry_regex = new Regex(this.claimPattern2); 
			Regex cors_regex = new Regex(this.corsFilePattern); 
			
			if(claim_regex.IsMatch(fileName))
			{
				library.Log(">> File Type: APR Claims File");
				try
				{
					library.Log(">> Total lines (amount of claims) = " + lines.Length);
					library.Log(">> Attempting to process file...");
					PERF02A perf02a = new PERF02A(lines,library);
					this.objectCount = perf02a.ProcessLines();
					library.Log(">> File processed successfully.");
					library.Log(">> " + this.objectCount +" Claim objects created.");
					
					this.fileProcessedCount++;
					
				}
				catch(Exception e)
				{
					library.Log("ERR: File was unable to be processed)");
					library.Log(e.ToString());
				}
				
				

			}
			else if(inquiry_regex.IsMatch(fileName))
			{
				library.Log(">> File identified to create APR Claims");
				PERF02A perf02a = new PERF02A(lines,library);
			}
			else if(cors_regex.IsMatch(fileName))
			{
				library.Log(">> File identified to create APR Inquiries");
				DWNCORS dwncors = new DWNCORS(lines,library);
			}
			else
			{
				library.Log("File is unrecognized..");
			}
			
			
    	}
		#endregion

    }
	

	//PERF02A Output Format - Claims
	#region Class: PERF02A
	public class PERF02A
	{
		#region Class Variables
		public string BC_BS;
		public string EXAM_NBR;
		public string DATE_PAID;
		public string BUCKET_NBR;
		public string BENEFIT_CODE;
		public string PCP_NBR;
		public string REF_NBR;
		public string ROUTE_CODE;
		public string CLAIM_NBR;
		public string POLICY_NBR;
		public string PAT_FNAME;
		public string PAT_LNAME;
		public string FIRST_DOS;
		public string LAST_DOS;
		public string PROV_NUMBER;
		public string GROUP_NBR;
		public string NET_PAY_AMT;
		public string NASCO_ICN;
		public string ORG_SYS;
		public string AUDIT_TYPE;
		private int objectCount;
		private string[] lines;
		#endregion
		
		MMO library;

		#region Constructor: PERF02A(string fileText)
		public PERF02A(string[] theFileText, MMO theLibrary)
		{
			this.library = theLibrary;
			this.lines = theFileText;
		
		}
		#endregion
		
		#region Void: ProcessLines()
		public int ProcessLines()
		{
			
			this.objectCount = 0;
			foreach(string line in this.lines)
			{
					
				#region Set field values from file
					this.BC_BS = line.Substring(0,1);
					this.EXAM_NBR = line.Substring(1,1);
					this.DATE_PAID = line.Substring(4,6);
					this.BUCKET_NBR = line.Substring(10,2);
					this.BENEFIT_CODE = line.Substring(12,4);			
					this.PCP_NBR = line.Substring(16,9);					
					this.REF_NBR = line.Substring(25,4);					
					this.ROUTE_CODE = line.Substring(29,4);			
					this.CLAIM_NBR = line.Substring(33,10);				
					this.POLICY_NBR = line.Substring(43,12);			
					this.PAT_FNAME = line.Substring(55,7);				
					this.PAT_LNAME = line.Substring(62,10);
					this.FIRST_DOS = line.Substring(72,6);
					this.LAST_DOS = line.Substring(78,6);		
					this.PROV_NUMBER = line.Substring(84,13);
					this.GROUP_NBR = line.Substring(97,9);			
					this.NET_PAY_AMT = line.Substring(106,10);				
					this.NASCO_ICN = line.Substring(116,13);			
					this.ORG_SYS = line.Substring(129,1);				
					this.AUDIT_TYPE = line.Substring(130,1);				
					#endregion
					
				#region Creating Claim Object
					try
					{
						Claim tempClaim = new Claim(library);
						tempClaim.setBenCode(this.BENEFIT_CODE);
						tempClaim.setSubID(this.POLICY_NBR);
						tempClaim.setProviderNum(this.PROV_NUMBER);
						tempClaim.setPayee(this.PCP_NBR);
						tempClaim.setReferenceNum(this.REF_NBR);
						tempClaim.setClaimNum(this.CLAIM_NBR);
						tempClaim.setFirstName(this.PAT_FNAME);
						tempClaim.setLastName(this.PAT_LNAME);
						tempClaim.setRouteCode(this.ROUTE_CODE);
						tempClaim.setBucket(this.BUCKET_NBR);
						tempClaim.setPaidDate(this.DATE_PAID);
						tempClaim.setGroupNum(this.GROUP_NBR);
						tempClaim.setStartofService(this.FIRST_DOS);
						tempClaim.setLastDate(this.LAST_DOS);
						tempClaim.setAuditType(this.AUDIT_TYPE);
						tempClaim.setClaimAmountPaid(this.NET_PAY_AMT);
						
						if(this.BUCKET_NBR.ToString().Length > 0)
						{
							library.Log(">> Claim");
						}
						if(this.BUCKET_NBR.ToString().Length < 1)
						{
							library.Log(">> Object is Performance Claim");
						}
					
						tempClaim.CreateObject();
						objectCount++;
						
					}
					catch(Exception e)
					{
						return 0;
						library.Log(">> ERR: Failed to create Claim Object !!");	
					}
					
					#endregion
					
			}
			return objectCount;
				
		}
		#endregion
		
		#region Void: LogValues()
		public void LogValues()
		{
			string comma = ",";
			StringBuilder lines = new StringBuilder();
			lines.Append(this.AUDIT_TYPE+comma)
			.Append(this.BC_BS+comma)
			.Append(this.BENEFIT_CODE+comma)
			.Append(this.BUCKET_NBR+comma)
			.Append(this.CLAIM_NBR+comma)
			.Append(this.DATE_PAID+comma)
			.Append(this.EXAM_NBR+comma)
			.Append(this.FIRST_DOS+comma)
			.Append(this.GROUP_NBR +comma).Append(this.LAST_DOS+comma)
			.Append(this.NASCO_ICN);
			library.Log(lines.ToString());
			
		
		}
		#endregion
		
	}
	#endregion
	
	//DWNSAMP Output Format - Inquiry
	#region Class: DWNSAMP
	public class DWNSAMP
	{
		#region Constructor: DWNSAMP(string fileText)
		public DWNSAMP(string fileText)
		{

		}
		#endregion
	}
	#endregion
	
	//DWNCORS Output Format - Claim
 	#region Class: DWNCORS
	public class DWNCORS
	{
		#region Class Variables
		public string OUT_EXAM_NBR; // Group 1 
		public string OUT_REF_NBR; // Group 2 // ReferenceNum
		public string OUT_POLICY_NO; // Group 3 // SubPolicyID
		public string OUT_INQ_NBR; // Group 4 // ICN
		public string OUT_METHOD_CODE; // Group 5  // InquiryMethod
		public string OUT_CLAIM_NBR; // Group 6  // ClaimNumber
		public string OUT_EAST_WEST; // Group 7 
		public string OUT_MGR_CC; // Group 8  // ManagerCostCenter
		public string OUT_DATE_RECEIVED; // Group 9 // DateReceived
		public string OUT_DATE_CLOSED; // Group 10  // ClosedDate
		public string OUT_EDU_ID; // Group 11
		public string OUT_REP_NO; // Group 12
		public string OUT_GRPING; // Group 13  // Grouping
		public string OUT_GRP_TITLE; // Group 14 // GroupName
		
		string[] lines;
		StringBuilder outputValues;
		MMO library;
		string regexString = @"(..);(....);(............);(..............);...;(........);(..........);(....);(....);(..........);..........;(..........);..........;(....................);(....);(..);(.*)";
		#endregion 
		
		#region Constructor: DWNCORS(string fileText)
		public DWNCORS (string[] fileText, MMO theLibrary)
		{
			this.library = theLibrary;
			this.lines = fileText;
			this.outputValues = new StringBuilder();
			try
			{
				SetValues();
			}
			catch(Exception e)
			{
				library.Log(e.ToString());
			}
		}
		#endregion
		
		#region Void: SetValues()
		public void SetValues()
		{
			Regex regex = new Regex(regexString);
	
			foreach(string line in lines)
			{

				MatchCollection matches = regex.Matches(line);
				foreach(Match match in matches)
				{
					try
					{

						StringBuilder lineItems = new StringBuilder();
						Inquiry tempInquiry = new Inquiry(this.library);
						string c = ",";
						
						#region OUT_REF_NBR
						this.OUT_REF_NBR =match.Groups[2].Value.ToString();						
						lineItems.Append(this.OUT_REF_NBR + c);
						tempInquiry.setReferenceNum(this.OUT_REF_NBR);
						lineItems.Append(tempInquiry.ReferenceNum.ToString() + c);
						#endregion
						
						#region OUT_POLICY_NO
						this.OUT_POLICY_NO = match.Groups[3].Value.ToString();
						lineItems.Append(this.OUT_POLICY_NO + c);						
						tempInquiry.setSubPolicyID(this.OUT_POLICY_NO);
						lineItems.Append(tempInquiry.SubPolicyID + c);
						#endregion
		
						#region OUT_INQ_NBR
						this.OUT_INQ_NBR = (match.Groups[4].Value.ToString());
						lineItems.Append(this.OUT_INQ_NBR+ c);
						tempInquiry.setICN(this.OUT_INQ_NBR);
						lineItems.Append(tempInquiry.ICN + c);
						#endregion
						
						#region OUT_INQ_NBR
						this.OUT_METHOD_CODE = match.Groups[5].Value.ToString();
						lineItems.Append(this.OUT_METHOD_CODE + c);
						tempInquiry.setInquiryMethod(this.OUT_METHOD_CODE);
						lineItems.Append(tempInquiry.InquiryMethod + c);
						#endregion
						
						#region OUT_CLAIM_NBR
						this.OUT_CLAIM_NBR = match.Groups[6].Value.ToString();
						lineItems.Append(OUT_CLAIM_NBR + c);
						tempInquiry.setClaimNumber(this.OUT_CLAIM_NBR);
						lineItems.Append(tempInquiry.ClaimNumber2 + c);
						#endregion
						
						this.OUT_MGR_CC = match.Groups[8].Value.ToString();
						lineItems.Append(this.OUT_MGR_CC + c);
						tempInquiry.setManagerCostCenter(this.OUT_MGR_CC);
						lineItems.Append(tempInquiry.ManagerCostCenter+ c);
						
						
						this.OUT_DATE_RECEIVED = match.Groups[9].Value.ToString();
						lineItems.Append(this.OUT_DATE_RECEIVED + c);
						tempInquiry.setDateReceived(this.OUT_DATE_RECEIVED);
						lineItems.Append(tempInquiry.DateReceived.ToString() + c);
						
						
						this.OUT_DATE_CLOSED = match.Groups[10].Value.ToString();
						lineItems.Append(this.OUT_DATE_CLOSED + c);
						tempInquiry.setDateClosed(this.OUT_DATE_CLOSED);
						lineItems.Append(tempInquiry.ClosedDate.ToString() + c);

						
						this.OUT_GRPING = match.Groups[13].Value.ToString();
						lineItems.Append(this.OUT_GRPING + c);
						tempInquiry.setGrouping(this.OUT_GRPING);
						lineItems.Append(tempInquiry.Grouping + c);
						
						
						this.OUT_GRP_TITLE = (match.Groups[14].Value.ToString());
						lineItems.Append(this.OUT_GRP_TITLE + c);
						tempInquiry.setGroupName(this.OUT_GRP_TITLE);
						lineItems.Append(tempInquiry.Grouping + c);
						
						this.OUT_EXAM_NBR = match.Groups[1].Value.ToString();
						this.OUT_EAST_WEST = match.Groups[5].Value.ToString();
						this.OUT_EDU_ID = match.Groups[11].Value.ToString();
						this.OUT_REP_NO = match.Groups[12].Value.ToString();
						
						lineItems.Append(c)
						.Append(c + OUT_EXAM_NBR + c)
						.Append(c + OUT_EAST_WEST + c)
						.Append(c + OUT_EDU_ID + c)
						.Append(c + this.OUT_REP_NO + c);
						
						outputValues.AppendLine(lineItems.ToString());
						tempInquiry.CreateObject();
						library.Log("Object Created");
					}
					catch(Exception e)
					{
						library.Log(e.ToString());
					}
					
				}
			}
			library.Log(this.outputValues.ToString());
		}
		#endregion
		

	}
	#endregion
	
	//Claims WorkView Object
	#region Class: Claim
	public class Claim
	{
		#region Class Variables
		int Year;//
		string Month;//
		int BenCode;//
		//string AjudicatorNumber;
		string SubID; //
		string ProviderNum;
		string Payee;
		string AuditType;
		//string ClaimType;
		int ReferenceNum;//
		string ClaimNum;
		string FirstName;
		string LastName;
		string RouteCode;
		//string GroupName;
		string Bucket;
		//string ProcessedDate;
		DateTime PaidDate;
		//string Disp;
		int GroupNum;
		DateTime StartofService;
		DateTime LastDate;
		//sting SystemType;
		decimal ClaimAmountPaid;
		#endregion
		
		MMO library;
		
		// Class constructor - only used to set library for logging
		#region Constructor: Claim(MMO theLibrary)
		public Claim(MMO theLibrary)
		{
			this.library = theLibrary;
		}
		#endregion
		
		// Create the 'APRClaims" WorkView object and set the attributes.
		#region Void: CreateObject()
		public void CreateObject()
		{
			#region Create 'Claims' Object
			// Access the WorkView module.
	        Hyland.Unity.WorkView.WorkView wvModule = library.app.WorkView;
	       
			// Get a WorkView application to work with.
	        Hyland.Unity.WorkView.Application wvApp = wvModule.Applications.Find("APR Claims and Inquiries Audit"); 
	       
			// Get APR Claims class from wv app
	        Hyland.Unity.WorkView.Class APR_Claims_Class = wvApp.Classes.Find("APRClaims");
				
			//Create a WorkView "APR Claim" Object and set attributes.
			Hyland.Unity.WorkView.Object APR_Claims_Object = APR_Claims_Class.CreateObject();library.Log(">> APR Claims object created");
			#endregion
			
			#region Set Attribute values on the Object
			
			// Create Attribute Value Modifier
			Hyland.Unity.WorkView.AttributeValueModifier valueModifier = APR_Claims_Object.CreateAttributeValueModifier();
			
			
			// Set Values on Attributes	
			valueModifier.SetAttributeValue("Year", this.Year);
			valueModifier.SetAttributeValue("Month", this.Month);
			valueModifier.SetAttributeValue("BenCode", this.BenCode);
			valueModifier.SetAttributeValue("SubID2", this.SubID); // changed from SubID to SubID2
			valueModifier.SetAttributeValue("ProviderNum",this.ProviderNum);
			valueModifier.SetAttributeValue("Payee",this.Payee);
			valueModifier.SetAttributeValue("AuditType",this.AuditType);
			valueModifier.SetAttributeValue("ReferenceNum", this.ReferenceNum);
			valueModifier.SetAttributeValue("ClaimNum", this.ClaimNum);
			valueModifier.SetAttributeValue("FirstName", this.FirstName);
			valueModifier.SetAttributeValue("LastName", this.LastName);
			valueModifier.SetAttributeValue("RouteCode", this.RouteCode);
			valueModifier.SetAttributeValue("Bucket", this.Bucket);
			valueModifier.SetAttributeValue("PaidDate", this.PaidDate);
			valueModifier.SetAttributeValue("GroupNum", this.GroupNum);
			valueModifier.SetAttributeValue("StartofService", this.StartofService);
			valueModifier.SetAttributeValue("LastDate", this.LastDate);
			valueModifier.SetAttributeValue("ClaimAmountPaid",this.ClaimAmountPaid);
			// Apply Changes
			valueModifier.ApplyChanges();
			#endregion					
			
		}
		#endregion
		
		#region Void: setYear(string str)
		public void setYear(string str)
		{
			this.Year = int.Parse(str);
		}
		#endregion
		#region Void: setMonth(string str)
		public void setMonth(string str)
		{
			int monthNum = int.Parse(str);
			string[] months = {"January","Feburary","March","April","May","June","July","August","September","October","November","December"};
			this.Month = months[monthNum-1];
		}
		#endregion
		#region Void: setBenCode(string str)
		public void setBenCode(string str)
		{
			this.BenCode = int.Parse(str);	
		}
		#endregion
		#region Void: setSubID(string str)
		public void setSubID(string str)
		{
			this.SubID = str.Replace(" ","");
		}
		#endregion
		#region Void: setProviderNum(string str)
		public void setProviderNum(string str)
		{
			this.ProviderNum = str;
		}
		#endregion
		#region Void: setPayee(string str)
		public void setPayee(string str)
		{
			this.Payee = str;
		}
		#endregion
		#region Void: setAuditType(string str)
		public void setAuditType(string str)
		{
			this.AuditType = str;
		}
		#endregion
		#region Void: setReferenceNum(string str)
		public void setReferenceNum(string str)
		{
			this.ReferenceNum = int.Parse(str);
		}
		#endregion
		#region Void: setClaimNum(string str)
		public void setClaimNum(string str)
		{
			this.ClaimNum = str;
		}
		#endregion
		#region Void: setFirstName(string str)
		public void setFirstName(string str)
		{
			this.FirstName = str.Replace(" ","");
		}
		#endregion
		#region Void: setLastName(string str)
		public void setLastName(string str)
		{
			this.LastName = str.Replace(" ","");
		}
		#endregion
		#region Void: setRouteCode(string str)
		public void setRouteCode(string str)
		{
			this.RouteCode = str;
		}
		#endregion
		#region Void: setBucket(string str)
		public void setBucket(string str)
		{
			this.Bucket = str.Replace(" ","");
		}
		#endregion
		#region Void: setPaidDate(string str)
		public void setPaidDate(string str)
		{
			string year = str.Substring(0,2);
			setYear("20" + year);
			string month = str.Substring(2,2);
			setMonth(month);
			string day = str.Substring(4,2);
			
			string date = string.Format("{0}/{1}/{2}",month,day,year);
			this.PaidDate = Convert.ToDateTime(date);
			
		}
		#endregion
		#region Void: setGroupNum(string str)
		public void setGroupNum(string str)
		{
			this.GroupNum = int.Parse(str.Replace(" ",""));
		}
		#endregion
		#region Void: setStartofService(string str)
		public void setStartofService(string str)
		{
			string year = str.Substring(0,2);		
			string month = str.Substring(2,2);
			string day = str.Substring(4,2);
			
			string date = string.Format("{0}/{1}/{2}",month,day,year);
			this.StartofService = Convert.ToDateTime(date);			
		}
		#endregion
		#region Void: setLastDate(string str) 
		public void setLastDate(string str)
		{
			string year = str.Substring(0,2);		
			string month = str.Substring(2,2);
			string day = str.Substring(4,2);
			
			string date = string.Format("{0}/{1}/{2}",month,day,year);
			this.LastDate = Convert.ToDateTime(date);				
		}
		#endregion
		
		#region Void: setClaimAmountPaid(string valueStr)
		public void setClaimAmountPaid(string valueStr)
		{
			decimal decimalVal;
			double value = Convert.ToDouble(valueStr,CultureInfo.InvariantCulture) / 100.00;
			decimalVal = Convert.ToDecimal(value);
			this.ClaimAmountPaid = decimalVal;
		}
		#endregion
					
	}
	#endregion
	
	//Inquiry WorkView Object
	#region Class: Inquiry 
	public class Inquiry
	{
		// WorkView Attributes - Each variable is spelled the exact way the Attribute is in WorkView.
		#region Class Variables
		public long ReferenceNum; 
		//public string Examiner;
		//public string AuditMonth; 
		public string ICN;
		public string ClaimNumber2;
		public string SubPolicyID;
		public string GroupName;
		public string Grouping;
		//public string HealthID;
		//public string DateofCall;
		//public string TimeofCall;
		//public string CSS;
		//public string CSSName;
		public DateTime DateReceived;
		public DateTime ClosedDate;
		public string InquiryMethod; 
		public string ManagerCostCenter;
		//public string ChangetoManagerCostCenter;
		#endregion
		MMO library;
		
		#region Constructor: Inquiry(MMO theLibrary)
		public Inquiry(MMO theLibrary)
		{
			this.library = theLibrary;
		}
		#endregion
		
		// Creates 'APRInquiry' WorkView object and sets attribute values
		#region Void: CreateObject()
		public void CreateObject()
		{
			#region Create 'APRInquiry' Object
			// Access the WorkView module.
	        Hyland.Unity.WorkView.WorkView wvModule = library.app.WorkView;
	       
			// Get a WorkView application to work with.
	        Hyland.Unity.WorkView.Application wvApp = wvModule.Applications.Find("APR Claims and Inquiries Audit"); library.Log(">> APR App Found");
	       
			// Get APR Claims class from wv app
	        Hyland.Unity.WorkView.Class APR_Inquiry_Class = wvApp.Classes.Find("APRInquiry");
				
			//Create a WorkView "APR Claim" Object and set attributes.
			Hyland.Unity.WorkView.Object APR_Inquiry_Object = APR_Inquiry_Class.CreateObject();library.Log(">> APR Claims object created");
			#endregion
			
			#region Set Attribute values on the Object
			
			// Create Attribute Value Modifier
			Hyland.Unity.WorkView.AttributeValueModifier valueModifier = APR_Inquiry_Object.CreateAttributeValueModifier();
			
			
			// Set Values on Attributes	
			valueModifier.SetAttributeValue("ReferenceNum",this.ReferenceNum);
			valueModifier.SetAttributeValue("ICN", this.ICN);
			valueModifier.SetAttributeValue("ClaimNumber2", this.ClaimNumber2);
			valueModifier.SetAttributeValue("SubPolicyID2",this.SubPolicyID);
			valueModifier.SetAttributeValue("GroupName",this.GroupName);
			valueModifier.SetAttributeValue("Grouping",this.Grouping);
			valueModifier.SetAttributeValue("DateReceived",this.DateReceived);
			valueModifier.SetAttributeValue("ClosedDate",this.ClosedDate);
			valueModifier.SetAttributeValue("InquiryMethod",this.InquiryMethod);
			valueModifier.SetAttributeValue("ManagerCostCenter",this.ManagerCostCenter);

			// Apply Changes
			valueModifier.ApplyChanges();
			#endregion					
		}
		#endregion
		
		#region Void: setReferenceNum(string val)
		public void setReferenceNum(string val)
		{
			this.ReferenceNum = long.Parse(val.Replace(" ",""));
		}
		#endregion		
		#region Void: setICN(string val)
		public void setICN(string val)
		{
			this.ICN = val;
		}
		#endregion		
		#region Void: setClaimNumber(string val)
		public void setClaimNumber(string val)
		{
			this.ClaimNumber2 = val.Replace(" ", "");
		}
		#endregion		
		#region Void: setSubPolicyID(string val)
		public void setSubPolicyID(string val)
		{
			this.SubPolicyID = val.Replace(" ","");
		}
		#endregion		
		#region Void: setGroupName(string val)
		public void setGroupName(string val)
		{
			this.GroupName = val;
		}
		#endregion		
		#region Void: setGrouping(string val)
		public void setGrouping(string val)
		{
			this.Grouping = val;
		}
		#endregion		
		#region Void: setDateReceived(string val)
		public void setDateReceived(string val)
		{
			this.DateReceived = Convert.ToDateTime(val);
		}
		#endregion		
		#region Void: setDateClosed(string val)
		public void setDateClosed(string val)
		{
			this.ClosedDate = Convert.ToDateTime(val);
		}
		#endregion	
		#region Void: setInquiryMethod(string val)
		public void setInquiryMethod(string val)
		{
			this.InquiryMethod = val;
		}
		#endregion	
		#region Void: setManagerCostCenter(string val)
		public void setManagerCostCenter(string val)
		{
			this.ManagerCostCenter = val;
		}
		#endregion		
		
	}
	#endregion
	
	
}
